# Generated by Django 4.2.6 on 2023-12-03 19:18

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=256, verbose_name='Пароль')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Модератор?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Можно в админку?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперсус?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', api.models.NewUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50, verbose_name='ФИО')),
                ('status', models.CharField(default='A', max_length=1, verbose_name='Статус активности')),
                ('bdate', models.DateField(verbose_name='День рождения')),
                ('height', models.CharField(max_length=20, verbose_name='Рост')),
                ('weight', models.CharField(max_length=20, verbose_name='Вес')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Последнее изменение')),
                ('file_extension', models.CharField(default='jpg', max_length=10, verbose_name='Расширение файла изображения')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Создание')),
                ('send', models.DateTimeField(blank=True, null=True, verbose_name='Отправка')),
                ('closed', models.DateTimeField(blank=True, null=True, verbose_name='Закрытие')),
                ('status', models.CharField(default='I', max_length=1, verbose_name='Статус')),
                ('moder_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moder_id', to=settings.AUTH_USER_MODEL, verbose_name='ID_Модератор')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL, verbose_name='ID_Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='RequestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_capitan', models.BooleanField(default=False, verbose_name='Капитан?')),
                ('Participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.participant', verbose_name='Участник')),
                ('Request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.request', verbose_name='Заявка')),
            ],
            options={
                'unique_together': {('Participant', 'Request')},
            },
        ),
    ]
